# -*- coding: utf-8 -*-
"""SimpleLinearRegression.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/149KS4rQDEQx8BNuIhNCY3VmfuxUPRWYY
"""

# linear Regression
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

from google.colab import files
upload = files.upload()

dataset = pd.read_csv('Salary_dataset.csv')

dataset

dataset.isnull().sum()

plt.xlabel('yearofExperience')
plt.ylabel('salary')
x  = dataset.iloc[:,1].values
y =dataset.iloc[:,2].values
plt.plot(x,y)

x

y

X= dataset.iloc[:,[1]].values
y =dataset.iloc[:,[2]].values

X

y

# Splitting the dataset into the Training set and Test set
from sklearn.model_selection import train_test_split

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 1/3, random_state = 0)



# Fitting Simple Linear Regression to the Training set
from sklearn.linear_model import LinearRegression
regressor = LinearRegression()
regressor.fit(X_train, y_train)

y_pred = regressor.predict(X_test)
print(y_pred)

plt.scatter(X_train, y_train, color = "red")

plt.plot(X_train, regressor.predict(X_train), color = 'blue')
plt.title('Salary vs Experience (Training set)')
plt.xlabel('Years of Experience')
plt.ylabel('Salary')
plt.show()
# Visualising the Test set results
plt.scatter(X_test, y_test, color = 'red')
plt.plot(X_test, regressor.predict(X_test), color = 'blue')
plt.title('Salary vs Experience (Test set)')
plt.xlabel('Years of Experience')
plt.ylabel('Salary')
plt.show()

print("Regressor slope:  %2.f  "%( regressor.coef_[0]))
print("Regressor intercept:%2.f  "% regressor.intercept_)

YearsExperience=6
print("Salary for given Years of Experience is : %.2f"    %(regressor.predict([[YearsExperience]])))

from google.colab import drive
drive.mount('/content/drive')

import pickle
print("[INFO] Saving model...")
# Save the trained model as a pickle string.
saved_model=pickle.dump(regressor,open('/content/drive/My Drive/lr.pkl', 'wb'))
# Saving model to disk
# Load the pickled model
model = pickle.load(open('/content/drive/My Drive/lr.pkl','rb'))
# Use the loaded pickled model to make predictions
model.predict(X_test)

YearsExperience =  3.0#@param{ type:"number"}

model = pickle.load(open('/content/drive/My Drive/lr.pkl','rb'))

output =  model.predict([[YearsExperience]])
print(output)

